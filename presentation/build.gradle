apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'com.ofg.uptodate'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: '../AndroidCodeQualityConfig/quality.gradle'

/*def keyConfigPath
if (isFamily(FAMILY_WINDOWS)) {
    keyConfigPath = System.getenv('USERPROFILE') + File.separator + ".ssh" + File.separator +
            "TemplateKeyStore.properties"
} else {
    keyConfigPath = System.getenv('HOME') + File.separator + ".ssh" + File.separator +
            "TemplateKeyStore.properties"
}

Properties props = new Properties()
if (new File(keyConfigPath).exists()) {
    props.load(new FileInputStream(file(keyConfigPath)))
}*/

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "boolean", "REPORT_CRASH", "true"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isTravis
    }

    signingConfigs {
        develop {
            storeFile file('../buildsystem/OpenKey.jks')
            storePassword '123456'
            keyAlias '123456'
            keyPassword '123456'
        }

        /*production {
            storeFile file(props['keystore'])
            storePassword props['keystore.password']
            keyAlias props['key.alias']
            keyPassword props['key.password']
        }*/
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.develop
        }

        release {
            minifyEnabled false
            debuggable true
            shrinkResources true
            signingConfig signingConfigs.develop // use open sign key
            //signingConfig signingConfigs.production  // use private sign key
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors.whenObjectAdded { flavor ->
        def flavorData = rootProject.ext[flavor.name]
        flavor.applicationId flavorData.packageName
        flavor.versionCode flavorData.versionCode
        flavor.versionName flavorData.versionName
    }

    productFlavors {
        develop {
            buildConfigField "boolean", "REPORT_CRASH", "false"
        }

        product {
            buildConfigField "boolean", "REPORT_CRASH", "true"
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        test.java.srcDirs += 'build/generated/source/apt/develop/debug'
    }
}

unMock {
    // URI to download the android-all.jar from. e.g. https://oss.sonatype
    // .org/content/groups/public/org/robolectric/android-all/
    downloadFrom 'https://oss.sonatype.org/content/groups/public/org/robolectric/android-all/4' +
            '.3_r2-robolectric-0/android-all-4.3_r2-robolectric-0.jar'

    keep "android.text.TextUtils"
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    compile (project(':model')) {
        exclude module: 'xlog'
    }
    compile project(':EasyFlow')
    compile (presentationDependencies.androidSupportAppCompatV7) {
        exclude module: 'support-v4'
    }
    compile (presentationDependencies.supportDesignLibrary) {
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    compile presentationDependencies.butterKnife
    compile (presentationDependencies.rxAndroid) {
        exclude module: 'rxjava'
    }

    apt presentationDependencies.daggerCompiler
    provided presentationDependencies.javaxAnnotation

    compile (presentationDependencies.mvp) {
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    compile (presentationDependencies.once) {
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
    }
    compile (presentationDependencies.rxBinding) {
        exclude module: 'support-annotations'
    }
    compile (presentationDependencies.rxBindingAppCompatV7) {
        exclude module: 'appcompat-v7'
        exclude module: 'rxbinding'
    }
    compile (presentationDependencies.rxLifeCycle) {
        exclude module: 'rxbinding'
    }
    compile (presentationDependencies.rxLifeCycleComponent) {
        exclude module: 'rxlifecycle'
        exclude module: 'appcompat-v7'
    }
    provided presentationDependencies.eventBusProcessor

    // UI library
    compile (presentationDependencies.recyclerViewV7) {
        exclude module: 'support-v4'
    }
    compile presentationDependencies.cardViewV7
    compile (presentationDependencies.fresco) {
        exclude module: 'support-v4'
    }
    compile presentationDependencies.loadToast
    compile (presentationDependencies.iconifyMD) {
        exclude module: 'support-v4'
    }
    compile (presentationDependencies.mugen) {
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }

    // Developer
    developCompile presentationDependencies.xLogAndroid
    productCompile presentationDependencies.xLogAndroidIdle
    retrolambdaConfig presentationDependencies.retrolambda
    compile presentationDependencies.stetho
    compile(presentationDependencies.fabric) {
        transitive = true;
    }
    developCompile presentationDependencies.leakCanary
    productCompile presentationDependencies.leakCanaryIdle

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    androidTestCompile (presentationTestDependencies.mockito) {
        exclude module: "hamcrest-core"
    }
    androidTestCompile presentationTestDependencies.hamcrestLibrary
    androidTestCompile presentationTestDependencies.dexmaker
    androidTestCompile (presentationTestDependencies.dexmakerMockito) {
        exclude module: "hamcrest-core"
        exclude module: "mockito-core"
    }
    androidTestCompile (presentationTestDependencies.espresso) {
        exclude module: "hamcrest-library"
        exclude module: "rules"
        exclude module: "runner"
    }
    androidTestCompile (presentationTestDependencies.espessoContrib) {
        exclude module: "espresso-core"
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile (presentationTestDependencies.espressoIntents) {
        exclude module: "espresso-core"
    }
    androidTestCompile presentationTestDependencies.androidJUnit4Rules
    androidTestApt presentationDependencies.daggerCompiler
}
buildscript {
    ext.kotlin_version = '0.12.1230'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
